<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="https://fabpl.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://fabpl.github.io/" rel="alternate" type="text/html" /><updated>2020-09-20T11:57:14+02:00</updated><id>https://fabpl.github.io/feed.xml</id><title type="html">Fabrice Planchette</title><subtitle>Lead Developer, Full-stack Developer, love coding.</subtitle><author><name>Fabrice Planchette</name></author><entry><title type="html">Création d’un URL Shortener - Installation de Laravel 8</title><link href="https://fabpl.github.io/laravel/2020/09/20/url-shortener-installation-laravel.html" rel="alternate" type="text/html" title="Création d’un URL Shortener - Installation de Laravel 8" /><published>2020-09-20T07:00:00+02:00</published><updated>2020-09-20T07:00:00+02:00</updated><id>https://fabpl.github.io/laravel/2020/09/20/url-shortener-installation-laravel</id><content type="html" xml:base="https://fabpl.github.io/laravel/2020/09/20/url-shortener-installation-laravel.html">&lt;p&gt;Au commencement il n’y avait rien, puis Laravel 8 est arrivé.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;installation-de-laravel-8&quot;&gt;Installation de Laravel 8&lt;/h1&gt;

&lt;p&gt;Laravel peut s’installer de deux manières différentes : Laravel Installer ou Composer create-project. 
Perso, je préfère la deuxième méthode :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;composer create-project --prefer-dist laravel/laravel url-shortener&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/composer-create-project-laravel.png&quot; alt=&quot;Installation Laravel 8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Une fois les différents packages installés, il suffit de lancer cette commande artisan pour lancer un serveur de développement :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;php artisan serve&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et comme le retour te l’indique, il te suffit d’ouvrir ton navigateur préféré à l’adresse &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://127.0.0.1:8000&lt;/code&gt; pour découvrir la homepage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/blog/laravel-homepage.png&quot; alt=&quot;Laravel 8 homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fabpl/url-shortener/tree/1.Installation-Laravel&quot;&gt;Code source&lt;/a&gt;&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="laravel" /><category term="php laravel" /><summary type="html">Au commencement il n’y avait rien, puis Laravel 8 est arrivé.</summary></entry><entry><title type="html">Création d’un URL Shortener avec la stack Laravel 8 / Livewire / TailwindCss</title><link href="https://fabpl.github.io/laravel/2020/09/19/url-shortener.html" rel="alternate" type="text/html" title="Création d’un URL Shortener avec la stack Laravel 8 / Livewire / TailwindCss" /><published>2020-09-19T07:00:00+02:00</published><updated>2020-09-19T07:00:00+02:00</updated><id>https://fabpl.github.io/laravel/2020/09/19/url-shortener</id><content type="html" xml:base="https://fabpl.github.io/laravel/2020/09/19/url-shortener.html">&lt;p&gt;Il y a quelques semaines, j’ai lu un article sur la stack TALL. Oui encore un acronyme pour désigner les éléments suivants :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;T&lt;/strong&gt;ailwindCss&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;lpine.js&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;L&lt;/strong&gt;aravel&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;L&lt;/strong&gt;ivewire&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bref, le combo pour créer une application web dynamique du front au back, en passant par de l’UX bien pensé.
Il me fallait donc une idée de projet pour découvrir tout ça : Un raccourcisseur d’URL (ou URL Shortener).&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;on-décompose-le-projet&quot;&gt;On décompose le projet&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/laravel/2020/09/20/url-shortener-installation-laravel.html&quot;&gt;Installation de Laravel 8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fabpl/url-shortener&quot;&gt;Code source&lt;/a&gt;&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="laravel" /><category term="php laravel livewire tailwindcss url-shortener" /><summary type="html">Il y a quelques semaines, j’ai lu un article sur la stack TALL. Oui encore un acronyme pour désigner les éléments suivants : TailwindCss Alpine.js Laravel Livewire Bref, le combo pour créer une application web dynamique du front au back, en passant par de l’UX bien pensé. Il me fallait donc une idée de projet pour découvrir tout ça : Un raccourcisseur d’URL (ou URL Shortener).</summary></entry><entry><title type="html">Désactiver le cache Laravel</title><link href="https://fabpl.github.io/laravel/2020/07/13/desactiver-cache.html" rel="alternate" type="text/html" title="Désactiver le cache Laravel" /><published>2020-07-13T07:00:00+02:00</published><updated>2020-07-13T07:00:00+02:00</updated><id>https://fabpl.github.io/laravel/2020/07/13/desactiver-cache</id><content type="html" xml:base="https://fabpl.github.io/laravel/2020/07/13/desactiver-cache.html">&lt;p&gt;Dans les meilleurs excuses de développeur, je demande le numéro 1 et de loin : Vide ton cache ! 
Car oui, tu le sais aussi bien que moi, un cache c’est bien pratique pour gagner en performance, mais ça peut jouer des tours.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Je ne vais pas ici te parler du cache navigateur mais bien celui mis en place côté back.
Car oui, Laravel va générer des fichiers en cache et pour plusieurs éléments :configuration, routing, vues.&lt;/p&gt;

&lt;h1 id=&quot;vide-ton-cache&quot;&gt;Vide ton cache&lt;/h1&gt;

&lt;p&gt;Pour effacer les fichiers mis en cache, tu as à ta disposition quelques commandes artisan.&lt;/p&gt;

&lt;p&gt;Les premières commandes sont ciblées aux 3 éléments qui ont été cités précédemment :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;php artisan config:clear
php artisan route:clear
php artisan view:clear&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ou de manière plus global :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;php artisan cache:clear&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;désactiver-le-cache&quot;&gt;Désactiver le cache&lt;/h1&gt;

&lt;p&gt;Lors de la phase de développement, t’as pas forcement envie de lancer cette dernière commande après chaque modification de ton code.
D’où l’idée de chercher à le désactiver complément.&lt;/p&gt;

&lt;p&gt;Comment ? En regardant &lt;a href=&quot;https://laravel.com/docs/7.x/cache&quot;&gt;la doc sur le cache&lt;/a&gt;, tu trouveras… à bah non tu trouveras rien.
Et pourtant, si tu fouilles dans le code source (bah ouai j’aime bien savoir comment ca marche), tu trouveras bien qu’il est possible de créer &lt;a href=&quot;https://github.com/laravel/framework/blob/b78880ad600cceb90cadbac1bef4aa60a3141106/src/Illuminate/Cache/CacheManager.php#L185&quot;&gt;un “NullDriver”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Du coup pour l’utiliser, il va falloir modifier 2 fichiers :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config/cache.php&lt;/code&gt; pour rajouter ce nouveau “driver” qui n’est pas définit par défaut,&lt;/li&gt;
  &lt;li&gt;et le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env&lt;/code&gt; pour l’utiliser&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour le fichier de configuration :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'stores'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'disabled'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'null'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;et le fichier d’environnement :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;CACHE_DRIVER=disabled&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et voila ! Plus de cache en local :)&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="laravel" /><category term="php laravel cache" /><summary type="html">Dans les meilleurs excuses de développeur, je demande le numéro 1 et de loin : Vide ton cache ! Car oui, tu le sais aussi bien que moi, un cache c’est bien pratique pour gagner en performance, mais ça peut jouer des tours.</summary></entry><entry><title type="html">Les expressions régulières</title><link href="https://fabpl.github.io/code/2020/07/03/regexp.html" rel="alternate" type="text/html" title="Les expressions régulières" /><published>2020-07-03T07:00:00+02:00</published><updated>2020-07-03T07:00:00+02:00</updated><id>https://fabpl.github.io/code/2020/07/03/regexp</id><content type="html" xml:base="https://fabpl.github.io/code/2020/07/03/regexp.html">&lt;p&gt;Les expressions régulières sont un outil transverse aux langages de programmation. Et que tu sois un développeur php ou javascript ou autre, quand un collègue te demande un coup de main pour écrire sa regexp (parce que regular expression c’est trop long), tu hésites et c’est normal.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;pourquoi-les-regexp-&quot;&gt;Pourquoi les regexp ?&lt;/h3&gt;

&lt;p&gt;C’est une sorte de fonction de recherche dans une chaîne de caractères. Mais pas que. En plus, elles permettent aussi faire de la validation ou de l’extraction de données.&lt;/p&gt;

&lt;p&gt;Donc si tu veux :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;valider le format d’une chaîne (ex : une adresse web),&lt;/li&gt;
  &lt;li&gt;extraire une portion de chaîne (ex : le type de rue dans une adresse)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les regexp sont là pour toi.&lt;/p&gt;

&lt;h3 id=&quot;délimiteurs&quot;&gt;Délimiteurs&lt;/h3&gt;

&lt;p&gt;Une regexp est toujours entourée de délimiteur. Tu peux mettre ce que tu veux mais hésite pas trop longtemps. Perso entre le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; et le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; mon coeur balance.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/regexp/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Prenons la chaîne suivante : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;.
Pour tester que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;world&lt;/code&gt; est présent, ça donne simplement :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/world/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;début-et-fin-de-chaîne&quot;&gt;Début et fin de chaîne&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ok mais moi je veux tester que ca commence par “world”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tu es bien exigeant jeune padawan, mais pour répondre à ta question, c’est pour ça qu’il existe des marqueurs de début et fin de chaîne : respectivement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt; et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/^world/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;les-caractères&quot;&gt;Les caractères&lt;/h3&gt;

&lt;p&gt;Bon un mot exact dans une chaîne c’est bien mignon mais dans la vrai vie (de dev) ta recherche est plus abstraite que ça. 
Donc voici comment tu peux utiliser les caractères dans ta regexp :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;[a-z] : Caractères minuscules de a à z.&lt;/li&gt;
  &lt;li&gt;[0-9] : Chiffres de 0 à 9.&lt;/li&gt;
  &lt;li&gt;[a-z0-9] : Lettres de « a » à « z » ou chiffres de 0 à 9.&lt;/li&gt;
  &lt;li&gt;#[^0-9]# : Chaîne ne contenant PAS de chiffres.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;T’as vu le dernier de la liste ? 
Pour faire une négation c’est avec un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;^&lt;/code&gt;, le même caractère que pour un début de chaîne. 
Ouai faut le savoir…&lt;/p&gt;

&lt;h3 id=&quot;les-quantifieurs&quot;&gt;Les quantifieurs&lt;/h3&gt;

&lt;p&gt;Bah oui, ça va avec les caractères que l’on a vu au-dessus.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;#a?# : « a » peut apparaître 0 ou 1 fois.&lt;/li&gt;
  &lt;li&gt;#a+# : « a » doit apparaître au moins 1 fois.&lt;/li&gt;
  &lt;li&gt;#a*# : « a » peut apparaître 0, 1 ou plusieurs fois.&lt;/li&gt;
  &lt;li&gt;#a{3}# : « a » doit apparaître 3 fois exactement (« aaa »).&lt;/li&gt;
  &lt;li&gt;#a{3,5}# : « a » doit apparaître de 3 à 5 fois (« aaa », « aaaa », « aaaaa »).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Donc si on applique la regexp suivante sur notre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt; ca marche ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/[a-z]+/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et non ! La majuscule, l’espace et le point d’exclamation, tu ne gères pas ces éléments dans ta regexp.&lt;/p&gt;

&lt;p&gt;Ca sert à rien mais si tu veux valider ton &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello world!&lt;/code&gt;, ça donnerait plutôt :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/^[a-zA-Z !]+$/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Au fait, tu ne m’as pas demandé pourquoi des délimiteurs ? 
Du coup j’y répond quand même : c’est parce que y’a des options possibles et qu’ils se mettent en fin de l’expression.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/regexp/options&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tu veux la liste de ces options ? Ok, voici :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;g : Global&lt;/li&gt;
  &lt;li&gt;m : Multiline&lt;/li&gt;
  &lt;li&gt;i : Case insensitive&lt;/li&gt;
  &lt;li&gt;x : Ignore whitespace&lt;/li&gt;
  &lt;li&gt;s : Single line&lt;/li&gt;
  &lt;li&gt;u : Unicode&lt;/li&gt;
  &lt;li&gt;X : eXtended&lt;/li&gt;
  &lt;li&gt;U : Ungreedy&lt;/li&gt;
  &lt;li&gt;A : Anchor&lt;/li&gt;
  &lt;li&gt;J : Duplicate group names&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tu as reperé le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; pour gérer la casse ? Donc ça veut dire qu’on peut améliorer notre regexp :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/^[a-z !]+$/i&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;quelques-exemples&quot;&gt;Quelques exemples&lt;/h3&gt;

&lt;p&gt;Allez en vrac quelques regexp pour te montrer ce que ça peut vite devenir compliquer.&lt;/p&gt;

&lt;h4 id=&quot;mot-de-passe-complexe&quot;&gt;Mot de passe complexe&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/^ # Début de chaîne
(?=(.*[0-9])) # Au moins 1 chiffre
(?=.*[a-z]) # Au moins 1 minuscule
(?=(.*[A-Z])) # Au moins 1 majuscule
(?=.*[\!@#$%^&amp;amp;*()\\\\[\]{}\-_+=~`|:;&quot;\'&amp;lt;&amp;gt;,.\/?]) # Au moins 1 caractère spéciale
(?=(.*)).{8,} # Au moins 8 caractères
$ # Fin de chaîne/mx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://regex101.com/r/DM6YCF/1&quot;&gt;Tester sur regex101&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;numéro-de-sécurité-sociale&quot;&gt;Numéro de sécurité sociale&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-regexp&quot; data-lang=&quot;regexp&quot;&gt;/^ # début de chaîne
(?&amp;lt;sexe&amp;gt;[12]) # 1 ou 2 pour le sexe
(?&amp;lt;naissance&amp;gt;[0-9]{2}(?:0[1-9]|1[0-2])) # année et mois de naissance (aamm)
(?&amp;lt;departement&amp;gt;2[AB]|[0-9]{2}) # le département
(?&amp;lt;postal_code&amp;gt;[0-9]{3}) # suite du code postal sur trois chiffres
(?&amp;lt;numserie&amp;gt;[0-9]{3}) # numéro de série sur trois chiffres
(?&amp;lt;controle&amp;gt;[0-9]{2})? # numéro de contrôle (facultatif)
$ # fin de chaîne/x&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://regex101.com/r/c3dn9F/1&quot;&gt;Tester sur regex101&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bah c’est quoi les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&amp;lt;...&amp;gt;&lt;/code&gt; que tu nous mets là ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;C’est pour nommer tes groupes, ça rend les éléments que tu captures plus lisible je trouve.&lt;/p&gt;

&lt;p&gt;Car oui je n’ai fait que survoler le sujet, il y a encore des choses à dire (les shortcodes, l’échappement, …), mais je te laisse faire tes propres recherches ;)&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="code" /><category term="regexp" /><summary type="html">Les expressions régulières sont un outil transverse aux langages de programmation. Et que tu sois un développeur php ou javascript ou autre, quand un collègue te demande un coup de main pour écrire sa regexp (parce que regular expression c’est trop long), tu hésites et c’est normal.</summary></entry><entry><title type="html">Supprimer un fichier versionné dans git</title><link href="https://fabpl.github.io/git/2020/07/02/supprimer-fichier.html" rel="alternate" type="text/html" title="Supprimer un fichier versionné dans git" /><published>2020-07-02T07:00:00+02:00</published><updated>2020-07-02T07:00:00+02:00</updated><id>https://fabpl.github.io/git/2020/07/02/supprimer-fichier</id><content type="html" xml:base="https://fabpl.github.io/git/2020/07/02/supprimer-fichier.html">&lt;p&gt;Que celui qui n’a jamais commit/push un groooooos fichier me jette la première pierre (ou une PR…) ! Alors laisse-moi te donner la commande pour réparer cette énorme bêtise.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Cette commande, j’en ai eu besoin une fois (une seule promis) et franchement, c’est pas le genre de truc que tu retiens par par coeur…&lt;/p&gt;

&lt;p&gt;L’idée est de parcourir chaque commit/branche du projet à la recherche de ce maudit fichier pour le supprimer de l’index.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git filter-branch &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--index-filter&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'git rm --cached --ignore-unmatch &amp;lt;&amp;lt;PATH_FILE_TO_REMOVE&amp;gt;&amp;gt;'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--prune-empty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--tag-name-filter&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; .git/refs/original/ &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; .git/logs/
git reflog expire &lt;span class=&quot;nt&quot;&gt;--expire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;now &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git gc &lt;span class=&quot;nt&quot;&gt;--prune&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;now &lt;span class=&quot;nt&quot;&gt;--aggressive&lt;/span&gt;
git push &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; origin master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;T’as vu, c’est le genre de commande, aussitôt lu, aussitôt oublié. Donc juste utile dans un bookmark.&lt;/p&gt;

&lt;p&gt;Et tant que je suis lancé, je te donne aussi la commande qui va te lister les fichiers par ordre de poids. Bah ouai, malin, ça fait un combo avec la commande précédente ;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git rev-list &lt;span class=&quot;nt&quot;&gt;--objects&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
| git cat-file &lt;span class=&quot;nt&quot;&gt;--batch-check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%(objecttype) %(objectname) %(objectsize) %(rest)'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
| &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s/^blob //p'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
| &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--numeric-sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
| &lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; 1-12,41- &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
| &lt;span class=&quot;nb&quot;&gt;numfmt&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 &lt;span class=&quot;nt&quot;&gt;--to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iec-i &lt;span class=&quot;nt&quot;&gt;--suffix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;B &lt;span class=&quot;nt&quot;&gt;--padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7 &lt;span class=&quot;nt&quot;&gt;--round&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nearest&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sympa hein :)&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="git" /><category term="git" /><summary type="html">Que celui qui n’a jamais commit/push un groooooos fichier me jette la première pierre (ou une PR…) ! Alors laisse-moi te donner la commande pour réparer cette énorme bêtise.</summary></entry><entry><title type="html">Ecrire un package Laravel</title><link href="https://fabpl.github.io/laravel/2020/07/01/package.html" rel="alternate" type="text/html" title="Ecrire un package Laravel" /><published>2020-07-01T07:00:00+02:00</published><updated>2020-07-01T07:00:00+02:00</updated><id>https://fabpl.github.io/laravel/2020/07/01/package</id><content type="html" xml:base="https://fabpl.github.io/laravel/2020/07/01/package.html">&lt;p&gt;DRY ! Oui tu as raison c’est un acronyme : Don’t Repeat Yourself - Ne te répète pas. 
L’idée d’un package est de contenir du code qui répond à un besoin précis et qui pourra être utiliser dans diverses applications.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;création-dun-package-laravel&quot;&gt;Création d’un package Laravel&lt;/h3&gt;

&lt;p&gt;Un package Laravel démarre avec 2 fichiers :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;un fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;composer.json&lt;/code&gt; qui renseignera la manière de charger tes classes (oui je parle de PSR-4 là)&lt;/li&gt;
  &lt;li&gt;une classe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ServiceProvider&lt;/code&gt; qui sert à l’initialisation de ton package.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;composerjson&quot;&gt;Composer.json&lt;/h4&gt;

&lt;p&gt;Voilà à quoi doit ressembler le fichier composer.json. 
Tu noteras que j’ai volontairement omis les tests unitaires dans le fichier. Oui c’est volontaire, j’espère sortir un article dédié sur le sujet bientôt ;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fabpl/package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;My awesome package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;homepage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/fabpl/package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;library&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;authors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Fabrice PLANCHETTE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;role&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Developer&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;require&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^7.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;illuminate/support&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^6.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;autoload&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;psr-4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;Fabpl\\Package\\&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sort-packages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;extra&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;laravel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;providers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Fabpl&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Package&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PackageServiceProvider&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;service-provider&quot;&gt;Service Provider&lt;/h3&gt;

&lt;p&gt;Laravel se charge tout seul de “découvrir” notre service provider (si si, c’est écrit dans la &lt;a href=&quot;https://laravel.com/docs/7.x/packages#package-discovery&quot;&gt;documentation&lt;/a&gt;), reste plus qu’à écrire son contenu :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Fabpl\Package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Illuminate\Support\ServiceProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PackageServiceProvider&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ServiceProvider&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cd&quot;&gt;/**
     * Bootstrap the application services.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;boot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * Register the application services.
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bah, t’as rien mis dans tes méthodes boot() et register ? C’est une blague ? Tu serais pas impatient toi ? Attends, je te détaille ça.&lt;/p&gt;

&lt;p&gt;Déjà il faut comprendre la différence. Une fois que tous les services providers ait été enregistrés (registered), ils vont être “booter”.&lt;/p&gt;

&lt;h4 id=&quot;boot&quot;&gt;Boot&lt;/h4&gt;

&lt;p&gt;Tu y mettras notamment ce qui doit être “charger”. Fichiers de traduction, de migrations, les vues et… les routes.&lt;/p&gt;

&lt;p&gt;Je te donne quelques exemples :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadTranslationsFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../resources/lang'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'package'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadViewsFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../resources/views'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'package'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadMigrationsFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../database/migrations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadRoutesFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/routes.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tu vas également renseigner ce qui peut être “publier”, c’est à dire copier vers l’application.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runningInConsole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publishes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../config/config.php'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'package.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Publishing the views.&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publishes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../resources/views'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resource_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'views/vendor/package'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'views'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Publishing assets.&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publishes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../resources/assets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;public_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vendor/package'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'assets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// Publishing the translation files.&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publishes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../resources/lang'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resource_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lang/vendor/package'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lang'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et le dernier truc, c’est si tu as des commandes artisan à enregister :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runningInConsole&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;FooCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;register&quot;&gt;Register&lt;/h4&gt;

&lt;p&gt;Le 1er truc à faire c’est de merger la config par défaut que tu as mis dans ton package, et celle que pourra surcharger le développement dans son application.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mergeConfigFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;__DIR__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/../config/config.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'package'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;C’est également dans cette méthode que tu vas enregistrer tes singletons.&lt;/p&gt;

&lt;p&gt;Mais je t’en ai trop dit, faut aller voir &lt;a href=&quot;https://laravel.com/docs/7.x/packages&quot;&gt;la documentation sur Laravel&lt;/a&gt; maintenant.&lt;/p&gt;

&lt;p&gt;Ah si j’oubliais ! Le top pour apprendre c’est de fouiller dans les packages des autres. y’a notamment &lt;a href=&quot;https://spatie.be/open-source/packages&quot;&gt;Spatie&lt;/a&gt; qui en fait énormement de package pour Laravel.&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="laravel" /><category term="php laravel package" /><summary type="html">DRY ! Oui tu as raison c’est un acronyme : Don’t Repeat Yourself - Ne te répète pas. L’idée d’un package est de contenir du code qui répond à un besoin précis et qui pourra être utiliser dans diverses applications.</summary></entry><entry><title type="html">L’objet collection de Laravel</title><link href="https://fabpl.github.io/laravel/2020/06/30/collections.html" rel="alternate" type="text/html" title="L’objet collection de Laravel" /><published>2020-06-30T07:00:00+02:00</published><updated>2020-06-30T07:00:00+02:00</updated><id>https://fabpl.github.io/laravel/2020/06/30/collections</id><content type="html" xml:base="https://fabpl.github.io/laravel/2020/06/30/collections.html">&lt;p&gt;Manipuler un ensemble de données sous forme de tableau, pour un développeur backend, c’est un peu la base. 
PHP dispose ainsi d’une palanqué de fonctions (oui j’avais envie de placer ce mot…) et qui ont été implémentées, comment dire…, non j’te dis pas, je te montre plutôt.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;81-fonctions&quot;&gt;81 fonctions&lt;/h3&gt;

&lt;p&gt;81 ! Il y a 81 fonctions possibles en PHP pour manipuler les tableaux (Cf &lt;a href=&quot;https://www.php.net/manual/en/ref.array.php&quot;&gt;php.net&lt;/a&gt;).
Mais là où tu peux t’arracher les cheveux (si t’en as encore) c’est dans l’implémentation de ses fonctions. 
Là, pas de pilote dans l’avion, chacun a fait ce qu’il voulait !&lt;/p&gt;

&lt;p&gt;Exemple :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nb&quot;&gt;array_filter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$array&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;callable&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;array_map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;callable&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$array1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;usort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$array&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;callable&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value_compare_func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_filter&lt;/code&gt; prend le tableau en 1er paramètre, puis un callable.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_map&lt;/code&gt; prend le tableau en 1er paramètre, puis un callable. Ah bah non, c’est l’inverse…&lt;/li&gt;
  &lt;li&gt;Quant à &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usort&lt;/code&gt;, il ne prend même pas la peine de renvoyer le tableau trié puisqu’il est passé en référence.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rien-ne-vaut-un-exemple-concret-avec-un-avantaprès&quot;&gt;Rien ne vaut un exemple concret avec un avant/après.&lt;/h3&gt;

&lt;p&gt;Prend ce tableau tout minion :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nom'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'One'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nom'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Two'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nom'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Three'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nom'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Second'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et on te demande la chose suivante : Sortir les noms par ordre croissant de valeur, celle-ci devant être supérieur à 10000.
Pourquoi on te demanderai ca ? C’est pour l’exemple je te dis. C’est pour avoir du tri, du filtre et du map.&lt;/p&gt;

&lt;h4 id=&quot;avec-les-fonctions-natives-de-php&quot;&gt;Avec les fonctions natives de PHP&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nb&quot;&gt;usort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et encore j’ai été sympa, j’ai pas imbriqué toutes ces fonctions parce qu’en terme de lisibilité, c’est juste affreux.&lt;/p&gt;

&lt;h4 id=&quot;avec-les-collections-de-laravel&quot;&gt;Avec les collections de Laravel&lt;/h4&gt;

&lt;p&gt;Heureusement, Laravel et son couteau suisse Collection sont là pour nous aider :)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sortByDesc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valeur'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hey! C’est pas beautiful ça !&lt;/p&gt;

&lt;p&gt;Allez va chercher bonheur sur la &lt;a href=&quot;https://laravel.com/docs/7.x/collections&quot;&gt;documentation Laravel&lt;/a&gt;. Va!&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="laravel" /><category term="php laravel collection" /><summary type="html">Manipuler un ensemble de données sous forme de tableau, pour un développeur backend, c’est un peu la base. PHP dispose ainsi d’une palanqué de fonctions (oui j’avais envie de placer ce mot…) et qui ont été implémentées, comment dire…, non j’te dis pas, je te montre plutôt.</summary></entry><entry><title type="html">Les options des routes d’authentification de Laravel</title><link href="https://fabpl.github.io/laravel/2020/06/29/options-routes-auth.html" rel="alternate" type="text/html" title="Les options des routes d’authentification de Laravel" /><published>2020-06-29T07:00:00+02:00</published><updated>2020-06-29T07:00:00+02:00</updated><id>https://fabpl.github.io/laravel/2020/06/29/options-routes-auth</id><content type="html" xml:base="https://fabpl.github.io/laravel/2020/06/29/options-routes-auth.html">&lt;p&gt;Auth::routes() accepte un paramètre permettant d’activer ou non certaines fonctionnalités de l’authentification&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Le savais-tu ? Dans Laravel, Auth::routes() accepte un paramètre permettant d’activer ou non certaines fonctionnalités de l’authentification.&lt;/p&gt;

&lt;p&gt;Pour initialiser l’authentification sous Laravel, il faut passer par le package laravel/ui qui notamment, via un commande artisan, va te proposer de générer tout ce qu’il faut (controller, view et… routes).&lt;/p&gt;

&lt;h3 id=&quot;installation-et-utilisation-de-laravelui&quot;&gt;Installation et utilisation de Laravel/ui&lt;/h3&gt;

&lt;p&gt;Pour installer cette dépendance :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;composer require laravel/ui&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;La commande pour générer toute la partie auth :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;&lt;span class=&quot;go&quot;&gt;php artisan ui bootstrap --auth&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Oui t’as vu j’ai mis bootstrap. T’as l’oeil toi !&lt;/p&gt;

&lt;p&gt;Si tu veux en savoir plus (parce que y’a vue et react qui sont aussi possibles), je te pose la documentation et le repo github là.&lt;/p&gt;

&lt;h3 id=&quot;les-options-sur-les-routes-dauthentification&quot;&gt;Les options sur les routes d’authentification&lt;/h3&gt;

&lt;p&gt;Donc Tu te retrouves avec une nouvelle ligne dans le fichier routes/web.php&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Mais ca fait quoi ?&lt;/p&gt;

&lt;p&gt;Bonne question Fred ! Cela va créer les routes pour se connecter, se déconnecter, réinitialiser son mot de passe et valider son adresse email.&lt;/p&gt;

&lt;p&gt;Et si j’ai pas besoin de tout ça Jamy ?&lt;/p&gt;

&lt;p&gt;Facile, cette méthode routes() prend en paramètre un tableau d’options. Tu ne me crois pas ? Il te faut une source ? Ok, tu trouveras ça sur le repo de laravel/ui avec le fichier AuthRouteMethods.&lt;/p&gt;

&lt;p&gt;Qu’est ce que l’on découvre ? Un tableau d’options mais oui !&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Registration Routes...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'register'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Password Reset Routes...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'reset'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Password Confirmation Routes...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'confirm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Email Verification Routes...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'verify'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tu as donc compris que tu avais là sous tes yeux ébahis les options possibles. Ce qui nous donne :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'confirm'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Fabrice Planchette</name></author><category term="laravel" /><category term="php laravel auth" /><summary type="html">Auth::routes() accepte un paramètre permettant d’activer ou non certaines fonctionnalités de l’authentification</summary></entry><entry><title type="html">Retirer la balise meta generator sous WordPress</title><link href="https://fabpl.github.io/wordpress/2020/06/28/retirer-balise-meta-generator.html" rel="alternate" type="text/html" title="Retirer la balise meta generator sous WordPress" /><published>2020-06-28T07:00:00+02:00</published><updated>2020-06-28T07:00:00+02:00</updated><id>https://fabpl.github.io/wordpress/2020/06/28/retirer-balise-meta-generator</id><content type="html" xml:base="https://fabpl.github.io/wordpress/2020/06/28/retirer-balise-meta-generator.html">&lt;p&gt;Exposer la version de votre Wordpress est un risque en matière de sécurité. Injectée par défaut, comment retirer la balise méta generator ?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;En inspectant le code source d’un page web qui utilise WordPress, tu vas tomber sur cette balise méta generator :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Wordpress 5.4.2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Et oui, WordPress se fait un peu de pub en l’injectant par défaut.&lt;/p&gt;

&lt;p&gt;A la limite pourquoi pas, mais la version exacte !&lt;/p&gt;

&lt;p&gt;Donc pour empêcher l’ajout de cette ligne, il te suffit d’ajouter simplement cette ligne dans votre fichier functions.php.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nx&quot;&gt;remove_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'wp_head'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wp_generator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Fabrice Planchette</name></author><category term="wordpress" /><category term="php wordpress meta" /><summary type="html">Exposer la version de votre Wordpress est un risque en matière de sécurité. Injectée par défaut, comment retirer la balise méta generator ?</summary></entry><entry><title type="html">Règles de sécurité pour ton htaccess</title><link href="https://fabpl.github.io/apache/2020/06/27/regles-securite-htaccess.html" rel="alternate" type="text/html" title="Règles de sécurité pour ton htaccess" /><published>2020-06-27T07:00:00+02:00</published><updated>2020-06-27T07:00:00+02:00</updated><id>https://fabpl.github.io/apache/2020/06/27/regles-securite-htaccess</id><content type="html" xml:base="https://fabpl.github.io/apache/2020/06/27/regles-securite-htaccess.html">&lt;p&gt;Une partie de la configuration apache se fait via le fichier .htaccess dont voici quelques lignes possibles pour améliorer la sécurité de ton site.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Tu te rappelles le A de la pile LAMP ? Apache ! Oui gagné ! Et bien une partie de sa configuration se fait via le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt; dont voici quelques lignes possibles pour améliorer la sécurité de ton site.&lt;/p&gt;

&lt;p&gt;Je le dis tout de suite avant que tu dises “ça marche pas ! on me demande de contacter mon administrateur système !”… Dans les codes ci-dessous je pars du principe que tu as activés les modules qui vont bien !&lt;/p&gt;

&lt;h3 id=&quot;redirection-vers-le-https&quot;&gt;Redirection vers le https&lt;/h3&gt;
&lt;p&gt;Allez, la première concerne les sites ayant un certificat SSL (mais si, tu sais, y’a un petit cadenas dans la barre d’adresse de ton navigateur 🔒). Et voilà qu’un visiteur tape http://ton.site.fr sans le “S” !&lt;/p&gt;

&lt;p&gt;Allez, on applique ces quelques lignes et c’est réglé :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nc&quot;&gt;RewriteEngine&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;on&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt; %{HTTPS} &lt;span class=&quot;ss&quot;&gt;off&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;RewriteCond&lt;/span&gt; %{HTTPS_HOST} !^%{HTTP_HOST}$ [NC]
&lt;span class=&quot;nc&quot;&gt;RewriteRule&lt;/span&gt; ^(.*)$ https://%{HTTP_HOST}/$1 [L,R=302]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;clickjacking&quot;&gt;Clickjacking&lt;/h3&gt;
&lt;p&gt;Tu connais ? C’est comme le carjacking mais avec un click. Non ? Ok…&lt;/p&gt;

&lt;p&gt;En bon français, ça donne “détournement de clic”. Pour en savoir plus, je te conseille cette page sur site de l’OWASP mais si t’as la flemme, il y a aussi une page sur Wikipédia.&lt;/p&gt;

&lt;p&gt;Bref, ça donne :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Protect website against clickjacking &lt;/span&gt;
 &lt;span class=&quot;nc&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;set&lt;/span&gt; X-Frame-Options SAMEORIGIN&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;xss&quot;&gt;XSS&lt;/h3&gt;
&lt;p&gt;En mode full-text, ça donne cross-site scripting. Là encore direction l’OWASP pour plus d’info.&lt;/p&gt;

&lt;p&gt;Coté implémentation, j’enchaine ci-dessous plusieurs headers visant à protéger ton site :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Prevent some browsers from MIME-sniffing the response&lt;/span&gt;
 &lt;span class=&quot;nc&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;set&lt;/span&gt; X-Content-Type-Options nosniff
 &lt;span class=&quot;c&quot;&gt;# Content Security Policy (CSP)&lt;/span&gt;
 &lt;span class=&quot;nc&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;set&lt;/span&gt; Content-Security-Policy &quot;object-src 'self'&quot;
 &lt;span class=&quot;c&quot;&gt;# HTTP Strict Transport Security (HSTS)&lt;/span&gt;
 &lt;span class=&quot;nc&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;always&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;set&lt;/span&gt; Strict-Transport-Security &quot;max-age=15552001; includeSubdomains; preload&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;informations-serveur&quot;&gt;Informations serveur&lt;/h3&gt;
&lt;p&gt;Exposer la version de ton PHP, comment dire, bah non tu fais pas ça ! Vas voir cette liste des failles et tu vas comprendre.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Remove the X-Powered-By response header&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unset&lt;/span&gt; X-Powered-By&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ah j’allais oublier, apache lui aussi peut être super sympa avec les hackers donc il vaut mieux lui demander d’être discret :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Prevent Apache from adding a trailing footer line&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;ServerSignature&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Off&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bref, ces quelques règles de sécurité dans ton &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt; ne vont pas te garantir un risque 0, mais au moins tu ne facilites pas la tâche à ceux qui te veulent du mal.&lt;/p&gt;

&lt;p&gt;Et toi, t’en vois d’autre ?&lt;/p&gt;</content><author><name>Fabrice Planchette</name></author><category term="apache" /><category term="apache htaccess" /><summary type="html">Une partie de la configuration apache se fait via le fichier .htaccess dont voici quelques lignes possibles pour améliorer la sécurité de ton site.</summary></entry></feed>